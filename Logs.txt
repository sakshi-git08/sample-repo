sakshi.aggarwal@L-PF1C9TX2:~$ cd git
sakshi.aggarwal@L-PF1C9TX2:~/git$ cd Sample\ repo/
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   git-command.txt

no changes added to commit (use "git add" and/or "git commit -a")
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git add *
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git commit -m "just a change"
[main b05f7ad] just a change
 1 file changed, 5 insertions(+), 1 deletion(-)
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin master
error: src refspec master does not match any
error: failed to push some refs to 'https://github.com/sakshi-git08/sample-repo.git'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin main
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 336 bytes | 336.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/sakshi-git08/sample-repo.git
   527ab9b..b05f7ad  main -> main
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   git-command.txt

no changes added to commit (use "git add" and/or "git commit -a")
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout -b test_branching_on_github
Switched to a new branch 'test_branching_on_github'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch test_branching_on_github
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   git-command.txt

no changes added to commit (use "git add" and/or "git commit -a")
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git add git command.txt
fatal: pathspec 'git' did not match any files
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git add git-command.txt
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin test_branching_on_github
Total 0 (delta 0), reused 0 (delta 0)
remote:
remote: Create a pull request for 'test_branching_on_github' on GitHub by visiting:
remote:      https://github.com/sakshi-git08/sample-repo/pull/new/test_branching_on_github
remote:
To https://github.com/sakshi-git08/sample-repo.git
 * [new branch]      test_branching_on_github -> test_branching_on_github
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout -b testing
Switched to a new branch 'testing'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch testing
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   git-command.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   git-command.txt

sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git add *
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin testing
FETCH_HEAD                        main                              origin/main                       test_branching_on_github
HEAD                              ORIG_HEAD                         origin/test_branching_on_github   testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin testing
FETCH_HEAD                        main                              origin/main                       test_branching_on_github
HEAD                              ORIG_HEAD                         origin/test_branching_on_github   testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin testing
FETCH_HEAD                        main                              origin/main                       test_branching_on_github
HEAD                              ORIG_HEAD                         origin/test_branching_on_github   testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin testing
Total 0 (delta 0), reused 0 (delta 0)
remote:
remote: Create a pull request for 'testing' on GitHub by visiting:
remote:      https://github.com/sakshi-git08/sample-repo/pull/new/testing
remote:
To https://github.com/sakshi-git08/sample-repo.git
 * [new branch]      testing -> testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch testing
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   git-command.txt

sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git commit -m "check"
[testing 1cbfa54] check
 1 file changed, 11 insertions(+), 1 deletion(-)
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin test
test_branching_on_github   testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin testing
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 380 bytes | 380.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/sakshi-git08/sample-repo.git
   b05f7ad..1cbfa54  testing -> testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout test_branching_on_github
Switched to branch 'test_branching_on_github'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout  testing
Switched to branch 'testing'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout test_branching_on_github
Switched to branch 'test_branching_on_github'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout test_branching_on_github
Already on 'test_branching_on_github'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git branch
* main
  test_branching_on_github
  testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git pull origin main
From https://github.com/sakshi-git08/sample-repo
 * branch            main       -> FETCH_HEAD
Already up to date.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge testing
FETCH_HEAD                        main                              origin/main                       origin/testing                    testing
HEAD                              ORIG_HEAD                         origin/test_branching_on_github   test_branching_on_github
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge testing
FETCH_HEAD                        main                              origin/main                       origin/testing                    testing
HEAD                              ORIG_HEAD                         origin/test_branching_on_github   test_branching_on_github
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge test
test_branching_on_github   testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge test_branching_on_githhub
merge: test_branching_on_githhub - not something we can merge
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge test_branching_on_github
Already up to date.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout main
Already on 'main'
Your branch is up to date with 'origin/main'.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge test_branching_on_github
Already up to date.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git branch
* main
  test_branching_on_github
  testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git branch
* main
  test_branching_on_github
  testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git
Display all 63 possibilities? (y or n)
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout main
Already on 'main'
Your branch is up to date with 'origin/main'.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge testing
Updating b05f7ad..1cbfa54
Fast-forward
 git-command.txt | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git branch
* main
  test_branching_on_github
  testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git branch
* main
  test_branching_on_github
  testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge test_branching_on_github
Already up to date.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git pull origin main
From https://github.com/sakshi-git08/sample-repo
 * branch            main       -> FETCH_HEAD
Already up to date.
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git branch
* main
  test_branching_on_github
  testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout test_branching_on_github branching_on_github
error: pathspec 'branching_on_github' did not match any file(s) known to git
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout test_branching_on_github
Switched to branch 'test_branching_on_github'
M       git-commands.txt
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch test_branching_on_github
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   git-commands.txt

no changes added to commit (use "git add" and/or "git commit -a")
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git add*
git: 'add*' is not a git command. See 'git --help'.

The most similar command is
        add
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git add *
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git commit -m "a minute change"
[test_branching_on_github af95d82] a minute change
 1 file changed, 1 insertion(+), 1 deletion(-)
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin test_branching_on_github
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 310 bytes | 310.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/sakshi-git08/sample-repo.git
   b05f7ad..af95d82  test_branching_on_github -> test_branching_on_github
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout main
Switched to branch 'main'
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git merge test_branching_on_github
Merge made by the 'recursive' strategy.
 git-commands.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout testing
Switched to branch 'testing'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git status
On branch testing
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        freecharge.txt

nothing added to commit but untracked files present (use "git add" to track)
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git add freecharge.txt freecharge.txt
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git add freecharge.txt
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git commit -m "fresh test"
[testing f289d2a] fresh test
 1 file changed, 1 insertion(+)
 create mode 100644 freecharge.txt
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git push origin testing
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 375 bytes | 187.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/sakshi-git08/sample-repo.git
   1cbfa54..f289d2a  testing -> testing
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$ git checkout test_branching_on_github
Switched to branch 'test_branching_on_github'
sakshi.aggarwal@L-PF1C9TX2:~/git/Sample repo$
